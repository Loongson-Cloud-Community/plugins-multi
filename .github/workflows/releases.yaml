name: CNI Plugins Automated Release Builds

on:
  workflow_dispatch:
    - cron: '0 0 1 * *'

jobs:
  get_latest_releases:
    name: Get Latest Releases
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.get-versions.outputs.VERSIONS }}
    steps:
      - name: Fetch Releases
        id: get-versions
        run: |
          VERSIONS=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/containernetworking/plugins/releases?per_page=8" | \
            jq -r '.[].tag_name' | \
            sort -u | \
            jq -R -s -c 'split("\n")[:-1]')

          echo "VERSIONS=${VERSIONS}" >> $GITHUB_OUTPUT

  linux_release:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    needs: get_latest_releases
    strategy:
      matrix:
        version: ${{ fromJson(needs.get_latest_releases.outputs.versions) }}
        goarch: [amd64, loong64]
    env:
      repo: 'containernetworking/plugins'
      version: ${{ matrix.version }}
    steps:
      - name: Checkout Current Repo
        uses: actions/checkout@v4

      - name: Clone Target Repo
        run: |
          git clone --depth=1 --branch=${{ env.version }} https://github.com/${{ env.repo }} target
          cp -r target/* .

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Build
        env:
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: ./build_linux.sh -ldflags '-extldflags -static -X github.com/containernetworking/plugins/pkg/utils/buildversion.BuildVersion=${{ env.version }}'

      - name: Prepare Artifacts
        run: |
          mkdir -p dist
          cp README.md LICENSE bin/
          sudo chown -R root:root bin/
          tar czvf dist/cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz -C bin .
          cd dist && \
          sha256sum cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz > cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz.sha256 && \
          sha512sum cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz > cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz.sha512

      - name: Upload All Artifacts
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACTION_PAT }}
          file: dist/*
          tag: ${{ env.version }}
          overwrite: true
          file_glob: true

