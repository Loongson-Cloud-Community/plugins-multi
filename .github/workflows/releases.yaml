name: 自定义二进制文件 - 自动化发布构建

on:
  workflow_dispatch:  # 无需手动输入版本号，将自动获取

jobs:
  get_latest_releases:
    name: 获取最新的20个发布版本
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.get-versions.outputs.VERSIONS }}  # 输出版本列表
    steps:
      - name: 获取最新发布版本
        id: get-versions
        run: |
          # 从GitHub API获取最新的10个发布版本
          # 使用jq处理JSON并提取tag_name
          VERSIONS=$(curl -s "https://api.github.com/repos/containernetworking/plugins/releases?per_page=10" | \
                     jq -r '.[].tag_name' | \
                     jq -R -s -c 'split("\n")[:-1]')
          echo "VERSIONS=${VERSIONS}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 需要读取发布的权限

  linux_release:
    name: 构建Linux二进制发布包
    runs-on: ubuntu-latest
    needs: get_latest_releases  # 依赖版本获取任务
    strategy:
      matrix:
        version: ${{ fromJson(needs.get_latest_releases.outputs.versions) }}  # 从JSON解析版本
        goarch: [amd64, loong64]  # 构建架构
    env:
      repo: 'containernetworking/plugins'
      version: ${{ matrix.version }}
    steps:
      - name: 显示版本信息
        run: |
          echo "======== 构建参数 ========"
          echo "版本=${{ env.version }}"

      - name: 检出代码
        uses: actions/checkout@v4
        with:
          repository: ${{ env.repo }}
          ref: ${{ env.version }}

      - name: 安装Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: 构建
        env:
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: ./build_linux.sh -ldflags '-extldflags -static -X github.com/containernetworking/plugins/pkg/utils/buildversion.BuildVersion=${{ env.version }}'

      - name: 复制文档文件
        run: cp README.md LICENSE bin/

      - name: 修改插件文件权限
        working-directory: ./bin
        run: sudo chown -R root:root .

      - name: 创建dist目录
        run: mkdir dist

      - name: 创建压缩包
        working-directory: ./bin
        run: tar cfzpv ../dist/cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz .

      - name: 生成sha256校验码
        working-directory: ./dist
        run: sha256sum cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz | tee cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz.sha256

      - name: 生成sha512校验码
        working-directory: ./dist
        run: sha512sum cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz | tee cni-plugins-linux-${{ matrix.goarch }}-${{ env.version }}.tgz.sha512

      - name: 上传到GitHub发布页
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/*
          tag: ${{ env.version }}
          overwrite: true
          file_glob: true
